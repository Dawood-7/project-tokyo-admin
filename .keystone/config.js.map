{
  "version": 3,
  "sources": ["../keystone.ts", "../schema.ts"],
  "sourcesContent": ["import { config } from '@keystone-6/core'\nimport 'dotenv/config'\nimport { lists } from './schema'\n\nconst getDatabaseUrl = (): string => {\n    if (!process.env.DATABASE_URL) {\n        throw new Error('Please provide a DATABASE_URL environment variable inside .env.local')\n    }\n    return process.env.DATABASE_URL\n}\n\nexport default config({\n  db: {\n    provider: \"postgresql\",\n    url: getDatabaseUrl(),\n  },\n  lists,\n});\n", "import { list } from \"@keystone-6/core\";\nimport { allowAll } from \"@keystone-6/core/access\";\nimport {\n  checkbox,\n  password,\n  relationship,\n  text,\n} from \"@keystone-6/core/fields\";\nimport { document } from \"@keystone-6/fields-document\";\n\nexport const lists = {\n  User: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      email: text({ isIndexed: \"unique\", validation: { isRequired: true } }),\n      password: password({\n        validation: {\n          isRequired: true,\n          length: {\n            min: 8,\n            max: 1000,\n          },\n          rejectCommon: true,\n        },\n        //   bcrypt: require('bcrypt')\n      }),\n      isAdmin: checkbox({ defaultValue: false }),\n    },\n  }),\n\n  Post: list({\n    access: allowAll,\n    fields: {\n      title: text({ validation: { isRequired: true } }),\n      content: document({\n        formatting: true,\n        links: true,\n        dividers: true,\n        layouts: [\n          [1, 1],\n          [1, 1, 1],\n          [2, 1],\n          [1, 2],\n          [1, 2, 1],\n        ],\n      }),\n      //   thumbnail: image({ storage: \"local\" }),\n      author: relationship({ ref: \"Author.posts\", many: false }),\n    },\n  }),\n\n  Author: list({\n    access: allowAll,\n    fields: {\n      name: text({ validation: { isRequired: true } }),\n      posts: relationship({ ref: \"Post.author\", many: true }),\n    },\n  }),\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,eAAuB;AACvB,oBAAO;;;ACDP,kBAAqB;AACrB,oBAAyB;AACzB,oBAKO;AACP,6BAAyB;AAElB,IAAM,QAAQ;AAAA,EACnB,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,UAAM,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAC/C,WAAO,oBAAK,EAAE,WAAW,UAAU,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MACrE,cAAU,wBAAS;AAAA,QACjB,YAAY;AAAA,UACV,YAAY;AAAA,UACZ,QAAQ;AAAA,YACN,KAAK;AAAA,YACL,KAAK;AAAA,UACP;AAAA,UACA,cAAc;AAAA,QAChB;AAAA;AAAA,MAEF,CAAC;AAAA,MACD,aAAS,wBAAS,EAAE,cAAc,MAAM,CAAC;AAAA,IAC3C;AAAA,EACF,CAAC;AAAA,EAED,UAAM,kBAAK;AAAA,IACT,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,WAAO,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAChD,aAAS,iCAAS;AAAA,QAChB,YAAY;AAAA,QACZ,OAAO;AAAA,QACP,UAAU;AAAA,QACV,SAAS;AAAA,UACP,CAAC,GAAG,CAAC;AAAA,UACL,CAAC,GAAG,GAAG,CAAC;AAAA,UACR,CAAC,GAAG,CAAC;AAAA,UACL,CAAC,GAAG,CAAC;AAAA,UACL,CAAC,GAAG,GAAG,CAAC;AAAA,QACV;AAAA,MACF,CAAC;AAAA;AAAA,MAED,YAAQ,4BAAa,EAAE,KAAK,gBAAgB,MAAM,MAAM,CAAC;AAAA,IAC3D;AAAA,EACF,CAAC;AAAA,EAED,YAAQ,kBAAK;AAAA,IACX,QAAQ;AAAA,IACR,QAAQ;AAAA,MACN,UAAM,oBAAK,EAAE,YAAY,EAAE,YAAY,KAAK,EAAE,CAAC;AAAA,MAC/C,WAAO,4BAAa,EAAE,KAAK,eAAe,MAAM,KAAK,CAAC;AAAA,IACxD;AAAA,EACF,CAAC;AACH;;;ADvDA,IAAM,iBAAiB,MAAc;AACjC,MAAI,CAAC,QAAQ,IAAI,cAAc;AAC3B,UAAM,IAAI,MAAM,sEAAsE;AAAA,EAC1F;AACA,SAAO,QAAQ,IAAI;AACvB;AAEA,IAAO,uBAAQ,qBAAO;AAAA,EACpB,IAAI;AAAA,IACF,UAAU;AAAA,IACV,KAAK,eAAe;AAAA,EACtB;AAAA,EACA;AACF,CAAC;",
  "names": ["import_core"]
}
